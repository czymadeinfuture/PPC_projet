# 可以在这里发送游戏开始的消息给所有客户端
            for player in self.players:
                player.send(b"Game starting")

这一行其实没有必要，但是也不用删。
初始化终于写完了，接下来要写打牌的。在server打出All players are ready. Game starting...之后，应该进入游戏主要的游玩部分。
那么玩家肯定是一个个行动的对不对。那么要按照1，2，3，4，。。。，n 这样的，按照玩家id从小到达的顺序一次行动，而且要轮回的行动。那么按照顺序，server要按照顺序的先通知1号玩家行动，
通过socket告诉他他现在可以行动。
当玩家收到来自server的可以行动的消息后，应该有个input选项，“请问你想怎么行动？（A：打出牌，B：信息令牌）”，这里玩家只需要输入A或者B即可选择到底怎么行动。我们先说打出牌的选项。
选择A打出牌之后，需要继续input，“你想打出哪张牌？（1，2，3，4，5）”，玩家需要输入1-5中的一个数，代表这手牌上从左到右的牌的位置。 选好后，client向server发送socket消息，
告知server玩家打出的是哪张牌，比如是Red1。这个时候需要判定出牌成功与否的。server在收到消息之后进行判定：首先查看打出的牌是什么颜色的，去找对应颜色的烟花堆，查看该颜色的烟花堆里，
玩家打出的牌是否可以放入，比如玩家打出Red4，要看红色烟花堆里有没有Red3，也就是有没有数字小一号的同样的颜色的牌，如果打出牌的数字是1，则查看烟花堆是否为空。如果是成功，则将打出的牌加入对应的烟花堆；
如果失败，则将打出的牌加入弃牌堆，并且炸弹令牌的值减1。然后，不论是成功，把牌放入了烟花堆，还是失败，把牌放入了弃牌堆，这个时候可能需要启动一个判定游戏是否结束的函数：检查所有的烟花堆，
是否每个烟花堆里都有5个元素，也就是是否每个烟花堆里都放每个颜色的1-5，如果是，则玩家获胜，通过socket给所有client发送“你们赢了！”，并在client端打印出来这条消息；检查炸弹令牌的值是否为0，
如果是0，则玩家失败，则通过socket给所有client发送“你们输了！”，并在client端打印出来这条消息；检查弃牌堆，如果弃牌堆中存在数字为5的牌，或者同一个颜色的两个4，或者同一个颜色的两个3，
或者同一个颜色的两个2，则玩家失败，则通过socket给所有client发送“你们输了！”，并在client端打印出来这条消息。如果经过检查，游戏没有结束，首先查看玩家是成功打出了一张牌还是失败打出一张牌，
成功则通过socket发送一条“干得好！”并在client的终端上print出来，失败的话则发送一个“你搞错了！”并在client的终端上print出来；然后再从deck中抽取一张牌，抽出来的时候记得从deck里删除掉，
抽出来通过socket发送给client，然后这张牌将取代client打出的牌的位置，应该是在self.my_hand 里更改。记住，当时选的牌是什么位置，这里新抽的牌就放在什么位置，其他牌的位置不能变。在这之后，
使用queue，发自己的手牌更新给所有人。然后在更新手牌之后，通过socket返回一条消息，比如“我这回合结束了”，然后告知socket让下一个人继续行动。

那么如果刚刚这个玩家在一开始的时候选择了B，则代表了另一种行动，打出信息牌。选择B之后，首先应该发送一个socket给server，告知server他马上要打出信息令牌，这个时候server要做个判断，
查看信息令牌时候为零，如果为0,则返回一条消息，“你不能打出信息令牌！”，然后让他重新选择；如果信息令牌不为0,则先修改信息令牌的数量，把信息令牌的数量减1,然后再socket返回一个消息，“你可以打出信息令牌。”，
然后应该继续出现input，“你想告诉哪个玩家？”，这里需要输入一个数字，就是参与的其他玩家的id，然后继续input，“你想告诉哪种信息？（A：颜色，B：数字）”，然后选择A或者B之后，如果选择A颜色，
则继续input“你想告知哪种颜色？（请输入颜色）”，这里需要输入Red，Yellow这种英语单词，如果选择B数字，继续input“你想告知哪个数字？（请输入数字）”，当选定后，由于本地有储存对应玩家的手牌，
这个时候需要生成一个消息：“玩家id （就是这轮行动的玩家）告知您，您的第 x，x，x（这里填对应的序数，有几张就填几张）张牌是x（这里填颜色或者数字。）”然后把这个消息通过queue发送给对应的玩家。
然后最后通过socket给server发送一个消息，比如“我这回合结束了”，然后告知socket让下一个人继续行动。
你可以给我写代码吗？